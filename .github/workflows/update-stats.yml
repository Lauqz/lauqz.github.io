name: Update GitHub Stats

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Fetch GitHub Stats
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch repos
          REPOS=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/users/Lauqz/repos?per_page=100)
          
          # Fetch specific repo stars
          DRONE_STARS=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/Lauqz/Drone-Swarm-RL-airsim-sb3 | jq '.stargazers_count')
          
          MCVRP_STARS=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/Lauqz/MCVRP---Multiple-Courier-Planning | jq '.stargazers_count')
          
          BLAST_STARS=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/Lauqz/BlastPursuitMARL | jq '.stargazers_count')
          
          # Count non-forked repos
          PROJECT_COUNT=$(echo $REPOS | jq '[.[] | select(.fork == false)] | length')
          
          # Create stats.json
          cat > stats.json << EOF
          {
            "projectCount": $PROJECT_COUNT,
            "stars": {
              "drone": $DRONE_STARS,
              "mcvrp": $MCVRP_STARS,
              "blast": $BLAST_STARS
            },
            "lastUpdated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF
          
      - name: Commit stats
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add stats.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update GitHub stats [skip ci]"
          git push
